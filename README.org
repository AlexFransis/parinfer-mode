#+TITLE: Parinfer Mode
#+AUTHOR: DogLooksGood

* Screenshots
[[file:screenshots/simple_demo.gif]]

* WIP, use with your own risk.
Work in progress, may not satble. 
I use this for my Clojure code and it just works.

But there's some bugs for compute the indentation for Emacs Lisp code.
So Seriously, *DO NOT USE THIS IN emacs-lisp-mode*.

* What's parinfer?
[[https://github.com/shaunlebron/parinfer][Take a look at this]]

* Installation
Currently not available on melpa now, so if you want try this, 
you have install it manually.
** Clone this repo.
#+BEGIN_SRC shell
  cd /some/path/parinfer-mode
  git clone https://github.com/DogLooksGood/parinfer-mode.git
#+END_SRC
** Emacs configurations.
This plugin rely on [[https://github.com/Malabarba/aggressive-indent-mode][aggressive-indent-mode]]. So you have to install it and do *NOT* enable it.
#+BEGIN_SRC emacs-lisp
  ;; Install aggressive with the way you prefer.
  (use-package aggressive-indent)

  ;; Add parinfer-mode to load-path.
  (add-to-list 'load-path "~/some/path/parinfer-mode")

  ;; Require it!
  (require 'parinfer)
#+END_SRC
** Enable parinfer-mode for Clojure.
~M-x parinfer-mode~

or
#+BEGIN_SRC emacs-lisp
  (add-hook 'clojure-mode-hook 'parinfer-mode)
#+END_SRC
Not work in Cider REPL now.

* Toggle Indent and Paren mode.
Use ~toggle-parinfer-mode~, default bind to ~C-9~.
#+BEGIN_SRC emacs-lisp
  (define-key map (kbd "C-9") 'toggle-parinfer-mode)
#+END_SRC
Whenever you switch to Indent Mode, if your code will be modified by parinfer,
You will see a confirm message in minibuffer. Type ~y~ for continue, ~n~ to stay in paren mode.

Notice! this modification may change the struct of code.

* Work with Evil?
Not yet, some work is needed. Will come soon.

* Performance.
Very slow on large file. (more than 500 lines)
Currently, for each text modification, it will compute the text of whole buffer.

If we compute only the current top level expression and the previous top level expression(if exists), 
it will be much faster in large file I think.

* Hooks?
~parinfer-mode-enable-hook~ and ~parinfer-mode-disable-hook~.

* Preview cursor scope?
Not support yet.
