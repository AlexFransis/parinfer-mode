#+TITLE: Parinfer Mode
#+AUTHOR: DogLooksGood

* Screenshots
[[file:screenshots/simple_demo.gif]]

* WIP, use with your own risk.
Work in progress, may not satble. 
I use this for my Clojure and Emacs Lisp code.

* What is Parinfer?
[[https://github.com/shaunlebron/parinfer][Take a look at this]]

* Installation
Currently not available on melpa now, so if you want try this, 
you have install it manually.
** Clone this repo.
#+BEGIN_SRC shell
  cd /some/path/parinfer-mode
  git clone https://github.com/DogLooksGood/parinfer-mode.git
#+END_SRC
** Emacs configurations.
This plugin rely on [[https://github.com/Malabarba/aggressive-indent-mode][aggressive-indent-mode]]. So you have to install it and do *NOT* enable it.
#+BEGIN_SRC emacs-lisp
  ;; Install aggressive with the way you prefer.
  (use-package aggressive-indent)

  ;; Add parinfer-mode to load-path.
  (add-to-list 'load-path "~/some/path/parinfer-mode")

  ;; Require it!
  (require 'parinfer)
#+END_SRC
** Enable parinfer-mode for Clojure.
~M-x parinfer-mode~

or
#+BEGIN_SRC emacs-lisp
  (add-hook 'clojure-mode-hook 'parinfer-mode)
#+END_SRC
Not work in Cider REPL now.

* Toggle Indent and Paren mode.
Use ~toggle-parinfer-mode~, default bind to ~C-9~.
#+BEGIN_SRC emacs-lisp
  (define-key map (kbd "C-9") 'toggle-parinfer-mode)
#+END_SRC
When the first time, you switch to Indent Mode, if your code will be modified by parinfer,
You will see a confirm message in minibuffer. Type ~y~ for continue, ~n~ to stay in paren mode.

Notice! this modification may change the struct of code.

* Work with Evil?
Not yet, some works are needed. Will come soon.

* Performance.
On each text modification, the current top-level form will be computed. 
When swith to Indent mode, whole buffer will be computed. 
No performance issue now.

* Hooks?
~parinfer-mode-enable-hook~ and ~parinfer-mode-disable-hook~.

* Preview cursor scope?
Not support yet.
